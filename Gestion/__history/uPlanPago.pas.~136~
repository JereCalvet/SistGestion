unit uPlanPago;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, uPlantillaGenerica, Data.DB,
  dxGDIPlusClasses, Vcl.ExtCtrls, Vcl.Mask, Vcl.DBCtrls, Vcl.StdCtrls,
  Vcl.Buttons, Vcl.Grids, Vcl.DBGrids, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, FireDAC.Comp.DataSet,
  FireDAC.Comp.Client, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, cxContainer, cxEdit, dxSkinsCore, dxSkinBlack,
  dxSkinBlue, dxSkinBlueprint, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom,
  dxSkinDarkSide, dxSkinDevExpressDarkStyle, dxSkinDevExpressStyle, dxSkinFoggy,
  dxSkinGlassOceans, dxSkinHighContrast, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMetropolis,
  dxSkinMetropolisDark, dxSkinMoneyTwins, dxSkinOffice2007Black,
  dxSkinOffice2007Blue, dxSkinOffice2007Green, dxSkinOffice2007Pink,
  dxSkinOffice2007Silver, dxSkinOffice2010Black, dxSkinOffice2010Blue,
  dxSkinOffice2010Silver, dxSkinOffice2013DarkGray, dxSkinOffice2013LightGray,
  dxSkinOffice2013White, dxSkinOffice2016Colorful, dxSkinOffice2016Dark,
  dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic, dxSkinSharp, dxSkinSharpPlus,
  dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinTheAsphaltWorld, dxSkinsDefaultPainters, dxSkinValentine,
  dxSkinVisualStudio2013Blue, dxSkinVisualStudio2013Dark,
  dxSkinVisualStudio2013Light, dxSkinVS2010, dxSkinWhiteprint,
  dxSkinXmas2008Blue, cxTextEdit, cxMaskEdit, cxDropDownEdit, cxLookupEdit,
  cxDBLookupEdit, cxDBLookupComboBox, AdvDBLookupComboBox, System.UITypes,
  cxDBEdit;

type
  TfrmPlanPago = class(TfrmPlantillaGenerica)
    pnlDetail: TPanel;
    lblTarjeta: TLabel;
    lblArancel: TLabel;
    dbtxtFECHA_ACTUALIZACION: TDBText;
    lblFecha: TLabel;
    dbgrdPlanPago: TDBGrid;
    btnSalir: TBitBtn;
    btnAceptar: TBitBtn;
    dblkcbbTarjeta: TDBLookupComboBox;
    dsMaestro: TDataSource;
    dsDetalle: TDataSource;
    lblCuotas: TLabel;
    btnAgregar: TBitBtn;
    btnEliminar: TBitBtn;
    dbtxtRETENCION: TDBText;
    procedure FormShow(Sender: TObject);
    procedure btnSalirClick(Sender: TObject);
    procedure dsMaestroDataChange(Sender: TObject; Field: TField);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure dbgrdPlanPagoDblClick(Sender: TObject);
    procedure dbedtArancelKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure dbedtArancelExit(Sender: TObject);
    procedure btnAgregarClick(Sender: TObject);
    procedure btnEliminarClick(Sender: TObject);
    procedure btn1Click(Sender: TObject);
  private
    { Private declarations }
    procedure HabilitaComponentes(Tarjeta:Char);
    procedure AplicoArancelyFecha_enPlanPago;
  public
    { Public declarations }
  end;

var
  frmPlanPago: TfrmPlanPago;

implementation

uses
  udmGestion, uDialogoPlanPagoCopia;

{$R *.dfm}

procedure TfrmPlanPago.AplicoArancelyFecha_enPlanPago;       //cuando edito el arancel, lo aplico a todas las cuotas y actualizo la fecha;
var
Arancel: Double;
aBookmark : TBookmark;
begin
   if dsDetalle.DataSet.State = dsEdit then
      with dmGestion do
         if not fdqryMDPlanPago.IsEmpty then
            begin
               dsDetalle.DataSet.DisableControls;
               try
                  Arancel := StrToFloat(dbedtArancel.Text); // TryStrToFloat()
                  aBookmark := fdqryMDPlanPago.GetBookmark;
                  fdqryMDPlanPago.First;
                  while not fdqryMDPlanPago.Eof do
                     begin
                        fdqryMDPlanPago.Edit;
                        fdqryMDPlanPago.FieldByName('RETENCION').Value := Arancel;
                        fdqryMDPlanPago.FieldByName('FECHA_ACTUALIZACION').Value := Now;
                        fdqryMDPlanPago.Post;
                        fdqryMDPlanPago.Next;
                      end;
                  fdqryMDPlanPago.ApplyUpdates(0);
                  fdqryMDPlanPago.CommitUpdates;
                  fdqryMDPlanPago.GotoBookmark(aBookmark);
                  fdqryMDPlanPago.FreeBookmark(aBookmark);
               finally
                  dsDetalle.DataSet.EnableControls;
               end;
            end;
end;

procedure TfrmPlanPago.btn1Click(Sender: TObject);
begin
  inherited;
dsDetalle.DataSet.Cancel;
end;

procedure TfrmPlanPago.btnAgregarClick(Sender: TObject);
var
Arancel : Double;
begin
  inherited;
  if dsDetalle.DataSet.State = dsInsert then
     with dmGestion do
        begin
//           if TryStrToFloat(dbedtArancel.Text, Arancel) then  //TryStrToFloat
//              TfrmDialogoPlanPagoCopia.MostrarModal
//           else
//              DatabaseError('El % de arancel no es correcto');
        end;
//  with dmGestion do
//    if not (fdqryMDPlanPago.FieldByName('RETENCION').IsNull) then
//       begin
//          Arancel:=fdqryMDPlanPago.FieldByName('RETENCION').Value;
//          dsDetalle.DataSet.Insert;
//          fdqryMDPlanPago.FieldByName('RETENCION').Value := Arancel;
//          TfrmDialogoPlanPagoCopia.MostrarModal;
//       end
//    else
//       ShowMessage(dbedtArancel.Text + 'ingrece % el arancel');
//       DatabaseError('Ingrese el % de arancel');
end;

procedure TfrmPlanPago.btnEliminarClick(Sender: TObject);
begin
  inherited;
  if not (dsDetalle.DataSet.IsEmpty) then
     if MessageDlg('Borrar registro?', mtConfirmation,[mbOK, mbCancel],0) = mrOk then
         with dmGestion do
            begin
               dsDetalle.DataSet.Delete;
               fdqryMDPlanPago.ApplyUpdates(0);
               fdqryMDPlanPago.CommitUpdates;
               fdqryMDPlanPago.Refresh;
            end
     else
         Abort
end;

procedure TfrmPlanPago.btnSalirClick(Sender: TObject);
begin
  inherited;
  dsMaestro.DataSet.Cancel;
  dsDetalle.DataSet.Cancel;
  Close;
end;

procedure TfrmPlanPago.dbedtArancelExit(Sender: TObject);    //si estoy modificando el arancel y salgo del edit con tab, aplico el procedimiento
begin
  inherited;
//  if dsDetalle.DataSet.State = dsEdit then
//     if dmGestion.fdqryPlanes_pagoRETENCION.IsNull then
//        ShowMessage('estoy editando y esta vacia');
    // AplicoArancelyFecha_enPlanPago;
end;

procedure TfrmPlanPago.dbedtArancelKeyDown(Sender: TObject; var Key: Word;         //si estoy modificando y salgo del edit con enter, aplico el procedimiento
  Shift: TShiftState);
begin
  inherited;
//  if Key = VK_RETURN then
//     if dmGestion.fdqryPlanes_pagoRETENCION.IsNull then
//        ShowMessage('estoy editando y esta vacia');
    // AplicoArancelyFecha_enPlanPago;
end;

procedure TfrmPlanPago.dbgrdPlanPagoDblClick(Sender: TObject);
begin
  inherited;
  dsDetalle.DataSet.Edit;
  TfrmDialogoPlanPagoCopia.MostrarModal;
end;

procedure TfrmPlanPago.dsMaestroDataChange(Sender: TObject; Field: TField);
begin
  inherited;
  with dmGestion do
    begin
       if fdqryMD_MetPag.FieldByName('TIPO').Value = 'D' then
          HabilitaComponentes('D');
       if fdqryMD_MetPag.FieldByName('TIPO').Value = 'C' then
          HabilitaComponentes('C');
    end;
end;

procedure TfrmPlanPago.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  inherited;
  dsMaestro.DataSet.Close;
  dsDetalle.DataSet.Close;
end;

procedure TfrmPlanPago.FormShow(Sender: TObject);
begin
  inherited;
  dsMaestro.DataSet.Open;
  dsDetalle.DataSet.Open;
  with dmGestion do
    begin
      if not fdqryMD_MetPag.IsEmpty then
        dblkcbbTarjeta.KeyValue := fdqryMD_MetPag.FieldByName('IDMETODO_PAGO').Value
      else
        dblkcbbTarjeta.ListFieldIndex := 0;
    end;
end;

procedure TfrmPlanPago.HabilitaComponentes(Tarjeta: Char);  //filtro componentes del formulario segun tipo de tarjeta
begin
   if Tarjeta = 'D' then
      begin
         pnlDetail.Enabled := False;
         dbgrdPlanPago.Visible := False;
         btnAgregar.Enabled := False;
         btnEliminar.Enabled := False;
      end;
   if Tarjeta = 'C' then
      begin
         pnlDetail.Enabled := True;
         dbgrdPlanPago.Visible := True;
         btnAgregar.Enabled := True;
         btnEliminar.Enabled := True;
      end;
end;


end.
